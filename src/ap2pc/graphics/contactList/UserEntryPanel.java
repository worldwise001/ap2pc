/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserEntryPanel.java
 *
 * Created on Jul 31, 2010, 5:30:15 PM
 */
package ap2pc.graphics.contactList;

import ap2pc.main.User;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.net.URL;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author sarah
 */
public class UserEntryPanel extends javax.swing.JPanel implements ListCellRenderer {

    /** Creates new form UserEntryPanel */
    public UserEntryPanel() {
        initComponents();

        for (int i = 0; i < ICON.length; i++) {
            URL url = getClass().getResource("/ap2pc/rsrc/contact/mini/" + ICON[i]);
            icon[i] = new ImageIcon(url);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        name = new javax.swing.JLabel();
        img = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        status = new javax.swing.JLabel();

        name.setFont(new java.awt.Font("DejaVu Sans", 0, 14));
        name.setText("Username");

        img.setBackground(new java.awt.Color(1, 1, 1));
        img.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        img.setMaximumSize(new java.awt.Dimension(64, 64));
        img.setMinimumSize(new java.awt.Dimension(64, 64));
        img.setPreferredSize(new java.awt.Dimension(64, 64));

        username.setText("Status");

        status.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(username, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(status, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(username)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(status))
            .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel img;
    private javax.swing.JLabel name;
    private javax.swing.JLabel status;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
    private Icon[] icon = new Icon[ICON.length];

    public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        User u = (User) value;
        int i = u.getIdentifier().hashCode() % ICON.length;
        if (i < 0) {
            i *= -1;
        }
        img.setIcon(icon[i]);
        username.setText(u.getStatus());
        name.setText(u.getIdentifier());
        name.setFont(null);

        Color background;
        Color uground;
        Color sground;
        if (isSelected) {
            background = new Color(80, 0, 0);
            uground = Color.WHITE;
            sground = Color.WHITE;
        } else {
            background = Color.WHITE;
            sground = Color.BLACK;
            switch (u.getShow()) {
                case AVAILABLE:
                    uground = Color.BLACK;
                    break;
                case DND:
                    uground = new Color(128, 0, 0);
                    break;
                case XA:
                    uground = new Color(0, 192, 0);
                    break;
                default:
                    uground = Color.GRAY;
                    break;
            }
        }
        switch (u.getShow()) {
            case AVAILABLE:
            case DND:
                name.setFont(FONT_ONLINE);
                break;
            default:
                name.setFont(FONT_AWAY);
                break;
        }
        setBackground(background);
        name.setForeground(uground);
        username.setForeground(sground);
        return this;
    }
    public static final String[] ICON = {
        "book.png", "inara.png", "jayne.png", "kaylee.png", "mal.png", "river.png", "simon.png", "wash.png", "zoe.png"
    };
    public static final Font FONT_ONLINE = new Font("DejaVu Sans", Font.BOLD, 16);
    public static final Font FONT_AWAY = new Font("DejaVu Sans", Font.ITALIC, 16);

    private void updateNameVisual()
    {
        
    }
}
